--{{ Settings }}--

getegenv().Settings = {
	
	Range = 20 ,
	
	Toggled = true ,
	
	Trans = 0
	
}

------------------



--{{ Variables }}--

local RunService  = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

-------------------



--{{ Notify }}--

function Notify(info)
	StarterGui:SetCore("SendNotification", {Title = "C:Bring()", Text = info})
end

----------------



--{{ Script }}--

RunService.Stepped:Connect(function()
	if Settings.Toggled then
		
		Notify(tostring(Setting.Toggled))
		
		for _, p in pairs(Players:GetPlayers()) do
			if p.Name ~= Player.Name then
				
				local qChar = p.Character
				local qHRP = qChar and qChar:FindFirstChild("HumanoidRootPart")
				local qHM = qChar and qChar:FindFirstChildOfClass("Humanoid")

				local Char = Player.Character
				local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
				local HM = Char and Char:FindFirstChildOfClass("Humanoid")
				
				if HM and qHM then
					if HM.Health > 0 and qHM.Health > 0 then
						
						local limbs = {
							RightArm = qChar:FindFirstChild("Right Arm"),
							LeftArm = qChar:FindFirstChild("Left Arm"),
							RightLeg = qChar:FindFirstChild("Right Leg"),
							LeftLeg = qChar:FindFirstChild("Left Leg"),
							Torso = qChar:FindFirstChild("Torso"),
							HumanoidRootPart = qChar:FindFirstChild("HumanoidRootPart"),
							Head = qChar:FindFirstChild("Head")
						}
						
						local Distance = (HRP.Position - qHRP.Position).Magnitude
						if Distance <= Settings.Range then
							
							local tool = Char and Char:FindFirstChildOfClass("Tool")
							local Handle = tool and tool:FindFirstChild("Handle")
							
							if tool and Handle then
								
								tool:Activate()
								local Qhrp = limbs.HumanoidRootPart
								
								if Qhrp then
									Qhrp:BreakJoints()
									Qhrp.CFrame = Handle.CFrame
									Qhrp.Transparency = Settings.Trans
								end
							end
						end
					end
				end
			end
		end
	end
end)

----------------
